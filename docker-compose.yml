services:
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_MULTIPLE_DATABASES: ${APP_DB_NAME:-app}:${APP_DB_PASS:-changeme},${LETTA_DB_NAME:-letta}:${LETTA_DB_PASS:-changeme}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASS:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      # NOTE: This only runs when volume mounted to Postgres does not yet exist!
      - ./init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    networks:
      - app
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8
    command: redis-server --requirepass ${REDIS_PASS:-changeme}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis:/data
    networks:
      - app
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  letta:
    image: letta/letta:latest
    environment:
      - LETTA_PG_URI=postgresql://${LETTA_DB_NAME}:${LETTA_DB_PASS}@postgres:5432/${LETTA_DB_NAME}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SECURE=${LETTA_SECURE:-true}
      - LETTA_SERVER_PASSWORD=${LETTA_PASS:-changeme}
      - LETTA_ENVIRONMENT=""
    ports:
      - '${LETTA_PORT:-8283}:8283'
    networks:
      - app
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          '-H',
          'Authorization: Bearer ${LETTA_PASS:-changeme}',
          'http://localhost:8283/v1/health/',
        ]
      interval: 2s
      timeout: 5s
      retries: 12
      start_period: 10s

  app:
    build: .
    environment:
      - APP_DATABASE_URL=postgresql://${APP_DB_NAME}:${APP_DB_PASS}@postgres:5432/${APP_DB_NAME}
      - FRONTEND_URL=${FRONTEND_URL}
      - REDIS_URL=redis://:${REDIS_PASS}@redis:6379
      - LETTA_URL=http://letta:8283
      - LETTA_PASS=${LETTA_PASS:-changeme}
      - SESSION_SECRET=${SESSION_SECRET:-super_secret_value}
      - SESSION_EXPIRY_HOURS=${SESSION_EXPIRY_HOURS:-336}
    ports:
      - '${APP_PORT:-3333}:3333'
    networks:
      - app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      letta:
        condition: service_healthy
    restart: unless-stopped

networks:
  app:
    driver: bridge

volumes:
  postgres:
  redis:
